# import sqlalchemy
import pyarrow as pa
import pandas as pd
"""
[
lista y listaTCA: Usado para subir paquetes de vuelta sintys.
namesList y dtypeDictCSV: Usado para dar titulo y tipos de dato a la lectura SOMOSO.
dtypeDictSQL: Los tipos de dato para subir el dataframe a la DB.
dtypeDictNomsXLS: Dar tipo a las columnas del excel a leer paar el cruce NOMS.
]
"""

# Listas para vueltas Sintys
lista = [
    {
        "Nombre": "B00",
        "dtype": {
			"id_persona ": pd.ArrowDtype(pa.string()),
            " QID  ": pd.ArrowDtype(pa.int64()),
            " BASE  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " CORTE  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " CUIT  ": pd.ArrowDtype(pa.int64()),
            " TDOC  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " NDOC  ": pd.ArrowDtype(pa.int64()),
            " SEXO  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " DENO  ": pd.ArrowDtype(pa.string()),
            " FNAC  ": pd.ArrowDtype(pa.string()),
            " MONTO  ": pd.ArrowDtype(pa.string()),
            " PROV  ": pd.ArrowDtype(pa.string()),
            " PERIODO  ": pd.ArrowDtype(pa.string()),
            " PERIODO_BASE  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " PERIODO_ACT  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " BASE_PROV  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " PASAPORTE  ": pd.ArrowDtype(pa.string()),
            " TIPO_EF  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " NRO_FORMULARIO  ": pd.ArrowDtype(pa.string()),
            " APELLIDO_ORIG  ": pd.ArrowDtype(pa.string()),
            " NOMBRE_ORIG  ": pd.ArrowDtype(pa.string()),
            " FNAC_ORIG  ": pd.ArrowDtype(pa.date64()),
            " SEXO_ORIGEN  ": pd.ArrowDtype(pa.string()),
            " TDOC_ORIG  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " NDOC_ORIG  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " PAIS_ORIGEN  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " CALLE  ": pd.ArrowDtype(pa.string()),
            " NUMERO  ": pd.ArrowDtype(pa.string()),
            " PISO  ": pd.ArrowDtype(pa.string()),
            " DEPTO  ": pd.ArrowDtype(pa.string()),
            " MANZANA  ": pd.ArrowDtype(pa.string()),
            " TORRE  ": pd.ArrowDtype(pa.string()),
            " TIPO_DATO_ADIC  ": pd.ArrowDtype(pa.string()),
            " DATO_ADICIONAL  ": pd.ArrowDtype(pa.string()),
            " LOCALIDAD  ": pd.ArrowDtype(pa.string()),
            " COD_POST  ": pd.ArrowDtype(pa.string()),
            " MUNICIPIO  ": pd.ArrowDtype(pa.string()),
            " OTRO_MUNICIPIO  ": pd.ArrowDtype(pa.string()),
            " PROV_ORIG  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " TELEFONO  ": pd.ArrowDtype(pa.string()),
            " OCUPACION  ": pd.ArrowDtype(pa.string()),
            " DESCR_TRABAJO  ": pd.ArrowDtype(pa.string()),
            " COD_ACTIVIDAD  ": pd.ArrowDtype(pa.string()),
            " ACTIVIDAD  ": pd.ArrowDtype(pa.string()),
            " LOCAL_ACTIVIDAD  ": pd.ArrowDtype(pa.string()),
            " PROV_ACTIVIDAD  ": pd.ArrowDtype(pa.string()),
            " OBRA  ": pd.ArrowDtype(pa.string()),
            " COOP_PROYECTO  ": pd.ArrowDtype(pa.string()),
            " CUIT_ORIG  ": pd.ArrowDtype(pa.string()),
            " RESOLUCION  ": pd.ArrowDtype(pa.string()),
            " CAMPO1  ": pd.ArrowDtype(pa.string()),
            " PERIODO_ORIGINAL  ": pd.ArrowDtype(pa.string()),
            " PROG  ": pd.ArrowDtype(pa.string()),
            " MONTOPRG  ": pd.ArrowDtype(pa.string()),
            " MONTOREDLES  ": pd.ArrowDtype(pa.string()),
            " MONTO_ORIG  ": pd.ArrowDtype(pa.string()),
            " ESTADO_SINTYS  ": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            " TIPO_PRESTACION_SINTYS  ": pd.ArrowDtype(pa.string()),
            " TIPO_BENEFICIARIO_SINTYS  ": pd.ArrowDtype(pa.string()),
            " CANAL_FINANCIACION_SINTYS  ": pd.ArrowDtype(pa.string()),
            " SUBPROGRAMA_SINTYS ": pd.ArrowDtype(pa.string()),        },
    },
    {
        "Nombre": "DATOS",
        "dtype": {
            "id_persona": pd.ArrowDtype(pa.int64()),
            "cuit": pd.ArrowDtype(pa.int64()),
            "tdoc": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "ndoc": pd.ArrowDtype(pa.int64()),
            "deno": pd.ArrowDtype(pa.string()),
            "sexo": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "fnac": pd.ArrowDtype(pa.date64()),
            "grado_confiab": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "EMBARCACIONES",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "MATRICULA": pd.ArrowDtype(pa.string()),
            "DOMICILIO": pd.ArrowDtype(pa.string()),
            "COD_POSTAL": pd.ArrowDtype(pa.string()),
            "LOCALIDAD": pd.ArrowDtype(pa.string()),
            "PROV": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "FEC_INSCRIPCION": pd.ArrowDtype(pa.string()),
            "VALUACION": pd.ArrowDtype(pa.string()),
            "TIPO_EMBARCACION": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "AERONAVES",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PROVINCIA": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "DOMICILIO_PART_SOC": pd.ArrowDtype(pa.string()),
            "LOCALIDAD_PART_SOC": pd.ArrowDtype(pa.string()),
            "MATRICULA": pd.ArrowDtype(pa.string()),
            "TIPO01": pd.ArrowDtype(pa.string()),
            "VALUACION": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "EMPLEO_DEPENDIENTE",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "SECTOR": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "TIPO_EMPLEO_PUBLICO": pd.ArrowDtype(pa.string()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "SITUACION_LABORAL": pd.ArrowDtype(pa.string()),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "MONTO": pd.ArrowDtype(pa.float64()),
            "CUIT_EMPLEADOR": pd.ArrowDtype(pa.string()),
            "DENO_EMPLEADOR": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "EMPLEO_INDEPENDIENTE",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "CATEGORIA": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        },
    },
    {
        "Nombre": "FALLECIDOS",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "ANIO": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "ACTA": pd.ArrowDtype(pa.string()),
            "TOMO": pd.ArrowDtype(pa.string()),
            "FOLIO": pd.ArrowDtype(pa.string()),
            "SECCIONAL": pd.ArrowDtype(pa.string()),
            "FFALL": pd.ArrowDtype(pa.string()),
            "ANOACTA": pd.ArrowDtype(pa.string()),
            "IMAGEN_TIFF": pd.ArrowDtype(pa.string()),
            "BASE": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "INMUEBLES",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "DOMICILIO_FISCAL": pd.ArrowDtype(pa.string()),
            "CALLE": pd.ArrowDtype(pa.string()),
            "NUMERO": pd.ArrowDtype(pa.string()),
            "PISO": pd.ArrowDtype(pa.string()),
            "APARTAMENTO": pd.ArrowDtype(pa.string()),
            "COD_POSTAL": pd.ArrowDtype(pa.string()),
            "LOCALIDAD": pd.ArrowDtype(pa.string()),
            "DEPARTAMENTO": pd.ArrowDtype(pa.string()),
            "PROVINCIA": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "NC_NOMENCLATURA": pd.ArrowDtype(pa.string()),
            "NC_PARTIDO": pd.ArrowDtype(pa.string()),
            "NC_DEPARTAMENTO": pd.ArrowDtype(pa.string()),
            "NC_DISTRITO": pd.ArrowDtype(pa.string()),
            "NC_CIRCUNSCRIPCION": pd.ArrowDtype(pa.string()),
            "NC_SECCION": pd.ArrowDtype(pa.string()),
            "NC_FRACCION": pd.ArrowDtype(pa.string()),
            "NC_MANZANA": pd.ArrowDtype(pa.string()),
            "NC_PARCELA": pd.ArrowDtype(pa.string()),
            "NC_CHACRA": pd.ArrowDtype(pa.string()),
            "NC_QUINTA": pd.ArrowDtype(pa.string()),
            "NC_LOTE": pd.ArrowDtype(pa.string()),
            "NC_UNIC_FUNCIONAL": pd.ArrowDtype(pa.string()),
            "FECHA_INSCRIPCION": pd.ArrowDtype(pa.date64()),
            "PARTIDA": pd.ArrowDtype(pa.string()),
            "MATRICULA": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "JUBILACIONES_PENSIONES",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "TBENE": pd.ArrowDtype(pa.string()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "LEY_APLICADA": pd.ArrowDtype(pa.string()),
            "MONTO": pd.ArrowDtype(pa.string()),
            "DESC_BENE": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "PADRON_AUTOMOTORES",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PROVINCIA": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "DOMINIO": pd.ArrowDtype(pa.string()),
            "FECHA_TITU_DESDE": pd.ArrowDtype(pa.string()),
            "CALLE": pd.ArrowDtype(pa.string()),
            "NUMERO": pd.ArrowDtype(pa.string()),
            "PISO": pd.ArrowDtype(pa.string()),
            "DEPTO": pd.ArrowDtype(pa.string()),
            "COD_POSTAL": pd.ArrowDtype(pa.string()),
            "LOCALIDAD": pd.ArrowDtype(pa.string()),
            # "MODELO": pd.ArrowDtype(pa.string()), en 202008 dejo de llegar de sintys
            "FECHA_INSCRIPCION": pd.ArrowDtype(pa.string()),
            "USO_VEHICULO": pd.ArrowDtype(pa.string()),
            "TIPO_AUTOMOTOR_NAC": pd.ArrowDtype(pa.string()),
            "TIPO_AUTOMOTOR_IMP": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "PERSONAS_JURIDICAS",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.string()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PROVINCIA": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "FECHA_INGRESO": pd.ArrowDtype(pa.string()),
            "FECHA_EGRESO": pd.ArrowDtype(pa.string()),
            "DOMICILIO_ACC": pd.ArrowDtype(pa.string()),
            "CALLE_ACC": pd.ArrowDtype(pa.string()),
            "NUMERO_ACC": pd.ArrowDtype(pa.string()),
            "PISO_ACC": pd.ArrowDtype(pa.string()),
            "DEPTO_ACC": pd.ArrowDtype(pa.string()),
            "COD_POST_ACC": pd.ArrowDtype(pa.string()),
            "LOCALIDAD_ACC": pd.ArrowDtype(pa.string()),
            "COD_LOC_ACC": pd.ArrowDtype(pa.string()),
            "DEPARTAMENTO_ACC": pd.ArrowDtype(pa.string()),
            "COD_DEPARTAMENTO_ACC": pd.ArrowDtype(pa.string()),
            "TIPO_SOC": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "DENO_SOC": pd.ArrowDtype(pa.string()),
            "CUIT_SOC": pd.ArrowDtype(pa.string()),
            "DOMICILIO_SOC": pd.ArrowDtype(pa.string()),
            "CALLE_SOC": pd.ArrowDtype(pa.string()),
            "NUMERO_SOC": pd.ArrowDtype(pa.string()),
            "PISO_SOC": pd.ArrowDtype(pa.string()),
            "DEPTO_SOC": pd.ArrowDtype(pa.string()),
            "COD_POST_SOC": pd.ArrowDtype(pa.string()),
            "LOCALIDAD_SOC": pd.ArrowDtype(pa.string()),
            "COD_LOCALIDAD_SOC": pd.ArrowDtype(pa.string()),
            "DEPARTAMENTO_SOC": pd.ArrowDtype(pa.string()),
            "COD_DEPARTAMENTO_SOC": pd.ArrowDtype(pa.string()),
            "PROVINCIA_SOC": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "FECHA_CONSTITUCION": pd.ArrowDtype(pa.string()),
            "NRO_LEGAJO": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "PNC",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "TBENE": pd.ArrowDtype(pa.string()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "LEY_APLICADA": pd.ArrowDtype(pa.string()),
            "MONTO": pd.ArrowDtype(pa.string()),
            "DESC_BENE": pd.ArrowDtype(pa.string()),
            # "SUB_TBENE": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "RUBPS",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "TIPO_PRESTACION": pd.ArrowDtype(pa.string()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "MONTO": pd.ArrowDtype(pa.string()),
        },
    },
    {
        "Nombre": "ASIGNACIONES",
        "dtype": {
            "ID_PERSONA": pd.ArrowDtype(pa.int64()),
            "BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "PERIODO_BASE": pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
            "TIPO_BEN": pd.ArrowDtype(pa.string()),
            "TIPO_PRESTACION": pd.ArrowDtype(pa.string()),
        },
    },
]

listaTCA = [
    {"Nombre": "TCA_100", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_200", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_302", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5249", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5375", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5396", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5397", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5399", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5402", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5406", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5407", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5411", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5453", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5501", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5550", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5588", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5604", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5605", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
    {"Nombre": "TCA_5678", "dtype": {"CODIGO": pd.ArrowDtype(pa.string()), "DESCRIPCION": pd.ArrowDtype(pa.string())}},
]


        #     0: pd.ArrowDtype(pa.string()),
        #     1: pd.ArrowDtype(pa.int64()),
        #     2: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     3: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     4: pd.ArrowDtype(pa.int64()),
        #     5: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     6: pd.ArrowDtype(pa.int64()),
        #     7: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     8: pd.ArrowDtype(pa.string()),
        #     9: pd.ArrowDtype(pa.string()),
        #     10: pd.ArrowDtype(pa.string()),
        #     11: pd.ArrowDtype(pa.string()),
        #     12: pd.ArrowDtype(pa.string()),
        #     13: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     14: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     15: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     16: pd.ArrowDtype(pa.string()),
        #     17: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     18: pd.ArrowDtype(pa.string()),
        #     19: pd.ArrowDtype(pa.string()),
        #     20: pd.ArrowDtype(pa.string()),
        #     21: pd.ArrowDtype(pa.string()),
        #     22: pd.ArrowDtype(pa.string()),
        #     23: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     24: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     25: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     26: pd.ArrowDtype(pa.string()),
        #     27: pd.ArrowDtype(pa.string()),
        #     28: pd.ArrowDtype(pa.string()),
        #     29: pd.ArrowDtype(pa.string()),
        #     30: pd.ArrowDtype(pa.string()),
        #     31: pd.ArrowDtype(pa.string()),
        #     32: pd.ArrowDtype(pa.string()),
        #     33: pd.ArrowDtype(pa.string()),
        #     34: pd.ArrowDtype(pa.string()),
        #     35: pd.ArrowDtype(pa.string()),
        #     36: pd.ArrowDtype(pa.string()),
        #     37: pd.ArrowDtype(pa.string()),
        #     38: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     39: pd.ArrowDtype(pa.string()),
        #     40: pd.ArrowDtype(pa.string()),
        #     41: pd.ArrowDtype(pa.string()),
        #     42: pd.ArrowDtype(pa.string()),
        #     43: pd.ArrowDtype(pa.string()),
        #     44: pd.ArrowDtype(pa.string()),
        #     45: pd.ArrowDtype(pa.string()),
        #     46: pd.ArrowDtype(pa.string()),
        #     47: pd.ArrowDtype(pa.string()),
        #     48: pd.ArrowDtype(pa.string()),
        #     49: pd.ArrowDtype(pa.string()),
        #     50: pd.ArrowDtype(pa.string()),
        #     51: pd.ArrowDtype(pa.string()),
        #     52: pd.ArrowDtype(pa.string()),
        #     53: pd.ArrowDtype(pa.string()),
        #     54: pd.ArrowDtype(pa.string()),
        #     55: pd.ArrowDtype(pa.string()),
        #     56: pd.ArrowDtype(pa.dictionary(pa.int16(), pa.string())),
        #     57: pd.ArrowDtype(pa.string()),
        #     58: pd.ArrowDtype(pa.string()),
        #     59: pd.ArrowDtype(pa.string()),
        #     60: pd.ArrowDtype(pa.string()),
        # },